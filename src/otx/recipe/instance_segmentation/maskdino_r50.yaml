model:
  class_path: otx.algo.instance_segmentation.maskdino.MaskDINOR50
  init_args:
    label_info: 80

    optimizer:
      class_path: torch.optim.AdamW
      init_args:
        lr: 0.0001
        weight_decay: 0.0001

    scheduler:
      class_path: otx.core.schedulers.LinearWarmupSchedulerCallable
      init_args:
        num_warmup_steps: 20
        main_scheduler_callable:
          class_path: lightning.pytorch.cli.ReduceLROnPlateau
          init_args:
            mode: max
            factor: 0.1
            patience: 4
            monitor: val/map_50

engine:
  task: INSTANCE_SEGMENTATION
  device: auto

callback_monitor: val/map_50

data: ../_base_/data/instance_segmentation.yaml
overrides:
  max_epochs: 100
  data:
    train_subset:
      batch_size: 2
      num_workers: 4
      transforms:
        - class_path: otx.core.data.transform_libs.torchvision.Resize
          init_args:
            keep_ratio: false
            transform_bbox: true
            transform_mask: true
            scale: $(input_size)
        - class_path: otx.core.data.transform_libs.torchvision.RandomFlip
          init_args:
            prob: 0.5
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [123.675, 116.28, 103.53]
            std: [58.395, 57.12, 57.375]

    val_subset:
      num_workers: 2
      transforms:
        - class_path: otx.core.data.transform_libs.torchvision.Resize
          init_args:
            keep_ratio: false
            scale: $(input_size)
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [123.675, 116.28, 103.53]
            std: [58.395, 57.12, 57.375]

    test_subset:
      num_workers: 2
      transforms:
        - class_path: otx.core.data.transform_libs.torchvision.Resize
          init_args:
            keep_ratio: false
            scale: $(input_size)
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [123.675, 116.28, 103.53]
            std: [58.395, 57.12, 57.375]
